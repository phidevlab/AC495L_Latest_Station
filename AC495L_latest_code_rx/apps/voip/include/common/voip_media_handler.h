/********************************************************************
 * AudioCodes improved application media handler                    *
 *                                                                  *
 * File Name:	voip_media_handler.h                                *
 *                                                                  *
 * Copyright (C) 2008 AudioCodes Ltd.                               *
 *                                                                  *
 * Modifications :                                                  *
 *                                                                  *
 * 26/02/08 - Coding started.                                       *
 *																	*
 ********************************************************************/

/*****************************************************************************
*                                                                            
* 		DESCRIPTION:  		                                                             
*                                                                            
******************************************************************************/

#ifndef	__VOIP_MEDIA_HANDLER_h
#define	__VOIP_MEDIA_HANDLER_h


/****************************************************************************
*
*	Name:		create_media_threads
*----------------------------------------------------------------------------
*	Abstract:		create the receiver and receiverEvent threads
*----------------------------------------------------------------------------
*	Input:		
*----------------------------------------------------------------------------
*  	Output:		none
*----------------------------------------------------------------------------
*	Returns: 	case of error -1 else 0
******************************************************************************/
void create_media_threads();

/****************************************************************************
*
*	Name:		transmitter
*----------------------------------------------------------------------------
*	Abstract:		pass the packets arives from networkt to the dsp
*----------------------------------------------------------------------------
*	Input:		
*----------------------------------------------------------------------------
*  	Output:		none
*----------------------------------------------------------------------------
*	Returns: 	none
******************************************************************************/
void transmitter(char* buff, int len, int channel, acgEProtocol protocol);

/****************************************************************************
*
*	Name:		receiverStunRes
*----------------------------------------------------------------------------
*	Abstract:		receive stun response from network
*----------------------------------------------------------------------------
*	Input:		sFd - the socket descriptor
*----------------------------------------------------------------------------
*  	Output:		none
*----------------------------------------------------------------------------
*	Returns: 	none
******************************************************************************/
void receiverStunRes( int sFd );

/****************************************************************************
*
*	Name:		receiver
*----------------------------------------------------------------------------
*	Abstract:		polled data from the dsp and send it to the suitable netTx socket
*----------------------------------------------------------------------------
*	Input:		fd - the dsp descriptor
*----------------------------------------------------------------------------
*  	Output:		none
*----------------------------------------------------------------------------
*	Returns: 	none
******************************************************************************/
void *receiver(void* arg);

/****************************************************************************
*
*	Name:		receiverEvent

*----------------------------------------------------------------------------
*	Abstract:	polled events from the dsp and handle them
*----------------------------------------------------------------------------
*	Input:		fd - the dsp descriptor
*----------------------------------------------------------------------------
*  	Output:		none
*----------------------------------------------------------------------------
*	Returns: 	none
******************************************************************************/
void *receiverEvent(void* arg);


#endif /* __VOIP_MEDIA_HANDLER_h */

